## BeOS Generic Makefile v2.0 ##

## Fill in this file to specify the project being created, and the referenced
## makefile-engine will do all of the hard work for you.  This handles both
## Intel and PowerPC builds of the BeOS.

## Application Specific Settings ---------------------------------------------

# specify the name of the binary
NAME=libBeGUI.so

# specify the type of binary
#	APP:	Application
#	SHARED:	Shared library or add-on
#	STATIC:	Static library archive
#	DRIVER: Kernel Driver
TYPE=SHARED

#	specify the source files to use
#	full paths or paths relative to the makefile can be included
# 	all files, regardless of directory, will have their object
#	files created in the common object directory.
#	Note that this means this makefile will not work correctly
#	if two source files with the same name (source.c or source.cpp)
#	are included from different directories.  Also note that spaces
#	in folder names do not work well with this makefile.
SRCS= myButton.cpp  myCheckBox.cpp myColorControl.cpp\
  myFancyButton.cpp  myListView.cpp  myPictureButton.cpp\
 myPopUpMenu.cpp  myPreferences.cpp    myPreferencesCTOR.cpp\
  myRadioView.cpp  mySlider.cpp mySpacer.cpp\
  myStatusBar.cpp  myStringDrawer.cpp  myStringView.cpp\
 myTextView.cpp prefPanelWindow.cpp s2f.cpp\
 s2int32.cpp addChildrenToBase.cpp        s2int64.cpp\
baseView.cpp                 s2uint32.cpp\
baseWindow.cpp               s2uint64.cpp\
basicColorWindow.cpp         scrollView.cpp\
colorWell.cpp                scrollingWindow.cpp\
dataList.cpp                 simpleWindow.cpp\
dataNode.cpp                 smallerRect.cpp\
filterCarriageReturn.cpp     specificColorWindow.cpp\
filterFloatNumeric.cpp       specificColorWindowCTOR.cpp\
filterHexNumeric.cpp         stringBoundsBox.cpp\
filterIntNumeric.cpp         stringControl.cpp\
filterUIntNumeric.cpp        stringGadget.cpp\
floatControl.cpp             textItem.cpp\
floatGadget.cpp              truncateString.cpp\
fontData.cpp                 uInt16Gadget.cpp\
fontDisplayWindow.cpp        uInt32Control.cpp\
fontPrefWindow.cpp           uInt32Gadget.cpp\
hexGadget.cpp                uInt64Gadget.cpp\
int16Gadget.cpp              uInt8Gadget.cpp\
int32Gadget.cpp              utf8_char_len.cpp\
int64Gadget.cpp              verify.cpp\
int8Gadget.cpp               warning.cpp\
layoutMatrix.cpp             widestDigit.cpp\
layoutMatrixItem.cpp   gadgetBase.cpp                     

#	specify the resource files to use
#	full path or a relative path to the resource file can be used.
RSRCS=BeGUIStrings.rsrc

#	specify additional libraries to link against
#	there are two acceptable forms of library specifications
#	-	if your library follows the naming pattern of:
#		libXXX.so or libXXX.a you can simply specify XXX
#		library: libbe.so entry: be
#		
#	- 	if your library does not follow the standard library
#		naming scheme you need to specify the path to the library
#		and it's name
#		library: my_lib.a entry: my_lib.a or path/my_lib.a
LIBS=prefs be root tracker

#	specify additional paths to directories following the standard
#	libXXX.so or libXXX.a naming scheme.  You can specify full paths
#	or paths relative to the makefile.  The paths included may not
#	be recursive, so include all of the paths where libraries can
#	be found.  Directories where source files are found are
#	automatically included.
LIBPATHS=lib

#	additional paths to look for system headers
#	thes use the form: #include <header>
#	source file directories are NOT auto-included here
SYSTEM_INCLUDE_PATHS=

#	additional paths to look for local headers
#	thes use the form: #include "header"
#	source file directories are automatically included
LOCAL_INCLUDE_PATHS=

#	specify the level of optimization that you desire
#	NONE, SOME, FULL
OPTIMIZE=FULL

#	specify any preprocessor symbols to be defined.  The symbols
#	will be set to a value of 1.  For example specify DEBUG if you want
#	DEBUG=1 to be set when compiling.
DEFINES=

#	specify special warning levels
#	if unspecified default warnings will be used
#	NONE = supress all warnings
#	ALL = enable all warnings
WARNINGS=NONE

#	specify whether image symbols will be created
#	so that stack crawls in the debugger are meaningful
#	if TRUE symbols will be created
SYMBOLS=

#	specify debug settings
#	if TRUE will allow application to be run from
#	a source-level debugger
DEBUGGER=

#	specify additional compiler flags for all files
COMPILER_FLAGS=

#	specify additional linker flags
LINKER_FLAGS=


## include the makefile-engine
include /boot/develop/etc/makefile-engine
